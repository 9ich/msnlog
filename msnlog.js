installHandlers();

function installHandlers() {
	let zone = document.getElementById("dropzone");
	let handlers = [
		["dragenter", hover],
		["dragover", null],
		["dragleave", unHover],
		["drop", unHover],
		["drop", onDrop]
	];
	for(let h of handlers){
		zone.addEventListener(h[0], suppress, false);
		if(h[1])
			zone.addEventListener(h[0], h[1], false);
	}

	function suppress(ev) {
		ev.preventDefault();
		ev.stopPropagation();
	}

	function hover(ev) { ev.target.classList.add("hover"); }
	function unHover(ev) { ev.target.classList.remove("hover"); }

	function onDrop(ev) {
		let f = ev.dataTransfer.files[0];
		ev.target.innerHTML = f.name;
		f.text().then(text => {
			displayLog(text);
		});
	}
}

function displayLog(text) {
	let view = document.getElementById("view");
	view.innerHTML = "";
	view.appendChild(transformLog(text));
}

function transformLog(text) {
	let proc = new XSLTProcessor();
	proc.importStylesheet(xmlDoc(xslText));
	return proc.transformToFragment(xmlDoc(text), document);
	
	function xmlDoc(text) {
		let p = new DOMParser();
		return p.parseFromString(text, "text/xml");
	}
}

// Derived from MessageLog.xsl generated by MSN Messenger
var xslText = `<?xml version="1.0"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<!-- localized strings -->
<xsl:variable name='ColumnHeader_Date'>Date</xsl:variable>
<xsl:variable name='ColumnHeader_Time'>Time</xsl:variable>
<xsl:variable name='ColumnHeader_From'>From</xsl:variable>
<xsl:variable name='ColumnHeader_To'>To</xsl:variable>
<xsl:variable name='ColumnHeader_Message'>Message</xsl:variable>

<!-- variables -->

<xsl:variable name='TableStyle'>font-family:MS Sans Serif; font-size:67%; text-align:left; vertical-align:top; table-layout:fixed</xsl:variable>
<xsl:variable name='GutterStyle'>width:2ex</xsl:variable>
<xsl:variable name='HeaderStyle'>border-bottom:1 solid black</xsl:variable>

<xsl:variable name='UseZebraStripe'>1</xsl:variable>
<xsl:variable name='ZebraStripeStyle'>background-color:#e0edff</xsl:variable>

<xsl:variable name='MostRecentSessionFirst'>0</xsl:variable>


<xsl:template match="Log">
		<table id='BodyTable' style="{$TableStyle}" cellspacing='0'>

			<col style="width:16ex;"/>
			<col style='{$GutterStyle}' />
			<col style="width:20ex;"/>
			<col style='{$GutterStyle}' />
			<col style="width:64ex;"/>
			<col style='{$GutterStyle}' />
			<col style="width:170ex;"/>

			<thead>
				<tr>
					<th style="{$HeaderStyle}">
						<xsl:value-of select="$ColumnHeader_Date"/>
					</th>
					<th/>
					<th style="{$HeaderStyle}">
						<xsl:value-of select="$ColumnHeader_Time"/>
					</th>
					<th/>
					<th style="{$HeaderStyle}">
						<xsl:value-of select="$ColumnHeader_From"/>
					</th>
					<th/>
					<th style="{$HeaderStyle}">
						<xsl:value-of select="$ColumnHeader_Message"/>
					</th>
				</tr>
			</thead>

			<tbody style='vertical-align:top'>
				<xsl:choose>

					<!-- newest session first -->
					<xsl:when test="$MostRecentSessionFirst = 1">
						<xsl:apply-templates>
							<xsl:sort select='@SessionID' order='descending' data-type='number'/>
							<xsl:sort select='@DateTime'  order='ascending'/>
						</xsl:apply-templates>
					</xsl:when>

					<!-- oldest session first -->
					<xsl:otherwise>
						<xsl:apply-templates>
							<xsl:sort select='@SessionID' order='ascending' data-type='number'/>
							<xsl:sort select='@DateTime'  order='ascending'/>
						</xsl:apply-templates>
					</xsl:otherwise>

				</xsl:choose>
			</tbody>
		</table>

</xsl:template>


<xsl:template match="Message">
	<tr>
		<xsl:call-template name="CommonMessageProcessing" />

		<td> <xsl:apply-templates select="From/User"/> </td>
		<td/>
		<td>
			<span>
				<xsl:attribute name="style">
					<xsl:value-of select="Text/@Style"/>
				</xsl:attribute>
				<xsl:value-of select="Text"/>
			</span>
		</td>
	</tr>
</xsl:template>


<xsl:template match="Invitation|InvitationResponse|Join|Leave">
	<tr>
		<xsl:call-template name="CommonMessageProcessing" />

		<td/>  <!-- From -->
		<td/>
		<td>
			<span>
				<xsl:attribute name="style">
					<xsl:value-of select="Text/@Style"/>
				</xsl:attribute>
				<xsl:value-of select="Text"/>
			</span>
		</td>
	</tr>
</xsl:template>


<xsl:template match="User">
	<!-- add a comma before all but the first user -->
	<xsl:if test="position() != 1">, </xsl:if>

	<xsl:value-of select="@FriendlyName"/>
</xsl:template>


<xsl:template name="CommonMessageProcessing">
	<!-- zebra-stripe the sessions -->
	<xsl:if test="$UseZebraStripe = 1">
		<xsl:if test="(@SessionID mod 2) = 0">
			<xsl:attribute name="style">
				<xsl:value-of select="$ZebraStripeStyle"/>
			</xsl:attribute>
		</xsl:if>
	</xsl:if>

	<td> <xsl:value-of select="@Date"/> </td>
	<td/>
	<td> <xsl:value-of select="@Time"/> </td>
	<td/>
</xsl:template>


</xsl:stylesheet>
`
